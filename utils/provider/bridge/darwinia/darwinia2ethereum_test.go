package darwinia

import (
	"context"
	"omni-balance/utils"
	"omni-balance/utils/chains"
	"omni-balance/utils/constant"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/shopspring/decimal"
	"github.com/stretchr/testify/assert"
)

func TestDarwinia2ethereum(t *testing.T) {
	var (
		args   = InitVar(t)
		amount = decimal.NewFromBigInt(chains.EthToWei(decimal.RequireFromString("0")), 0)
	)
	args.ctx = context.WithValue(args.ctx, constant.FeeTestKeyInCtx, decimal.RequireFromString("1"))
	tx, err := Darwinia2ethereum(args.ctx, SwapParams{
		Sender:    args.sender,
		TokenName: "RING",
		Amount:    amount,
		Nonce:     1716966337913,
		Client:    args.client,
	})
	assert.NoError(t, err)
	utils.AssertEqualFold(t, common.Bytes2Hex(tx.Data
	assert.Equal(t, tx.To.Hex(), "0x092e19C46C9daAb7824393f1CD9c22f5BEA13560")

	tx, err = Darwinia2ethereum(args.ctx, SwapParams{
		Sender:    args.sender,
		TokenName: "KTON",
		Amount:    amount,
		Nonce:     1716966513487,
		Client:    args.client,
	})
	assert.NoError(t, err)
	utils.AssertEqualFold(t, common.Bytes2Hex(tx.Data), "AC66B6A2000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000004020000000000000000000000004CA75992D2750BEC270731A72DFDEDE6B9E71CC700000000000000000000000043EF13E84D9992D1461A1F90CAC4653658CEA4FD00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000018FC32DDB4F00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000006000000000000000000000000043EF13E84D9992D1461A1F90CAC4653658CEA4FD00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000148FD00000000000000000000000043EF13E84D9992D1461A1F90CAC4653658CEA4FD00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000")
	assert.Equal(t, tx.To.Hex(), "0x2B496f19A420C02490dB859fefeCCD71eDc2c046")
}
