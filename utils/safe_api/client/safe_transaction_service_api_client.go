// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"omni-balance/utils/safe_api/client/about"
	"omni-balance/utils/safe_api/client/contracts"
	"omni-balance/utils/safe_api/client/data_decoder"
	"omni-balance/utils/safe_api/client/delegates"
	"omni-balance/utils/safe_api/client/messages"
	"omni-balance/utils/safe_api/client/modules"
	"omni-balance/utils/safe_api/client/notifications"
	"omni-balance/utils/safe_api/client/nr4337"
	"omni-balance/utils/safe_api/client/owners"
	"omni-balance/utils/safe_api/client/safes"
	"omni-balance/utils/safe_api/client/tokens"
	"omni-balance/utils/safe_api/client/transactions"
	"omni-balance/utils/safe_api/client/transfer"
)

// Default safe transaction service API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "safe-transaction-sepolia.safe.global"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new safe transaction service API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *SafeTransactionServiceAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new safe transaction service API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *SafeTransactionServiceAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new safe transaction service API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *SafeTransactionServiceAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(SafeTransactionServiceAPI)
	cli.Transport = transport
	cli.About = about.New(transport, formats)
	cli.Contracts = contracts.New(transport, formats)
	cli.DataDecoder = data_decoder.New(transport, formats)
	cli.Delegates = delegates.New(transport, formats)
	cli.Messages = messages.New(transport, formats)
	cli.Modules = modules.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.Nr4337 = nr4337.New(transport, formats)
	cli.Owners = owners.New(transport, formats)
	cli.Safes = safes.New(transport, formats)
	cli.Tokens = tokens.New(transport, formats)
	cli.Transactions = transactions.New(transport, formats)
	cli.Transfer = transfer.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// SafeTransactionServiceAPI is a client for safe transaction service API
type SafeTransactionServiceAPI struct {
	About about.ClientService

	Contracts contracts.ClientService

	DataDecoder data_decoder.ClientService

	Delegates delegates.ClientService

	Messages messages.ClientService

	Modules modules.ClientService

	Notifications notifications.ClientService

	Nr4337 nr4337.ClientService

	Owners owners.ClientService

	Safes safes.ClientService

	Tokens tokens.ClientService

	Transactions transactions.ClientService

	Transfer transfer.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *SafeTransactionServiceAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.About.SetTransport(transport)
	c.Contracts.SetTransport(transport)
	c.DataDecoder.SetTransport(transport)
	c.Delegates.SetTransport(transport)
	c.Messages.SetTransport(transport)
	c.Modules.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.Nr4337.SetTransport(transport)
	c.Owners.SetTransport(transport)
	c.Safes.SetTransport(transport)
	c.Tokens.SetTransport(transport)
	c.Transactions.SetTransport(transport)
	c.Transfer.SetTransport(transport)
}
