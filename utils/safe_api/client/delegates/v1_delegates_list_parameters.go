// Code generated by go-swagger; DO NOT EDIT.

package delegates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewV1DelegatesListParams creates a new V1DelegatesListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewV1DelegatesListParams() *V1DelegatesListParams {
	return &V1DelegatesListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewV1DelegatesListParamsWithTimeout creates a new V1DelegatesListParams object
// with the ability to set a timeout on a request.
func NewV1DelegatesListParamsWithTimeout(timeout time.Duration) *V1DelegatesListParams {
	return &V1DelegatesListParams{
		timeout: timeout,
	}
}

// NewV1DelegatesListParamsWithContext creates a new V1DelegatesListParams object
// with the ability to set a context for a request.
func NewV1DelegatesListParamsWithContext(ctx context.Context) *V1DelegatesListParams {
	return &V1DelegatesListParams{
		Context: ctx,
	}
}

// NewV1DelegatesListParamsWithHTTPClient creates a new V1DelegatesListParams object
// with the ability to set a custom HTTPClient for a request.
func NewV1DelegatesListParamsWithHTTPClient(client *http.Client) *V1DelegatesListParams {
	return &V1DelegatesListParams{
		HTTPClient: client,
	}
}

/*
V1DelegatesListParams contains all the parameters to send to the API endpoint

	for the v1 delegates list operation.

	Typically these are written to a http.Request.
*/
type V1DelegatesListParams struct {

	/* Delegate.

	   delegate
	*/
	Delegate *string

	/* Delegator.

	   delegator
	*/
	Delegator *string

	/* Label.

	   label
	*/
	Label *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	/* Safe.

	   safe
	*/
	Safe *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the v1 delegates list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *V1DelegatesListParams) WithDefaults() *V1DelegatesListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the v1 delegates list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *V1DelegatesListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the v1 delegates list params
func (o *V1DelegatesListParams) WithTimeout(timeout time.Duration) *V1DelegatesListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 delegates list params
func (o *V1DelegatesListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 delegates list params
func (o *V1DelegatesListParams) WithContext(ctx context.Context) *V1DelegatesListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 delegates list params
func (o *V1DelegatesListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 delegates list params
func (o *V1DelegatesListParams) WithHTTPClient(client *http.Client) *V1DelegatesListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 delegates list params
func (o *V1DelegatesListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDelegate adds the delegate to the v1 delegates list params
func (o *V1DelegatesListParams) WithDelegate(delegate *string) *V1DelegatesListParams {
	o.SetDelegate(delegate)
	return o
}

// SetDelegate adds the delegate to the v1 delegates list params
func (o *V1DelegatesListParams) SetDelegate(delegate *string) {
	o.Delegate = delegate
}

// WithDelegator adds the delegator to the v1 delegates list params
func (o *V1DelegatesListParams) WithDelegator(delegator *string) *V1DelegatesListParams {
	o.SetDelegator(delegator)
	return o
}

// SetDelegator adds the delegator to the v1 delegates list params
func (o *V1DelegatesListParams) SetDelegator(delegator *string) {
	o.Delegator = delegator
}

// WithLabel adds the label to the v1 delegates list params
func (o *V1DelegatesListParams) WithLabel(label *string) *V1DelegatesListParams {
	o.SetLabel(label)
	return o
}

// SetLabel adds the label to the v1 delegates list params
func (o *V1DelegatesListParams) SetLabel(label *string) {
	o.Label = label
}

// WithLimit adds the limit to the v1 delegates list params
func (o *V1DelegatesListParams) WithLimit(limit *int64) *V1DelegatesListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the v1 delegates list params
func (o *V1DelegatesListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the v1 delegates list params
func (o *V1DelegatesListParams) WithOffset(offset *int64) *V1DelegatesListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the v1 delegates list params
func (o *V1DelegatesListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithSafe adds the safe to the v1 delegates list params
func (o *V1DelegatesListParams) WithSafe(safe *string) *V1DelegatesListParams {
	o.SetSafe(safe)
	return o
}

// SetSafe adds the safe to the v1 delegates list params
func (o *V1DelegatesListParams) SetSafe(safe *string) {
	o.Safe = safe
}

// WriteToRequest writes these params to a swagger request
func (o *V1DelegatesListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Delegate != nil {

		// query param delegate
		var qrDelegate string

		if o.Delegate != nil {
			qrDelegate = *o.Delegate
		}
		qDelegate := qrDelegate
		if qDelegate != "" {

			if err := r.SetQueryParam("delegate", qDelegate); err != nil {
				return err
			}
		}
	}

	if o.Delegator != nil {

		// query param delegator
		var qrDelegator string

		if o.Delegator != nil {
			qrDelegator = *o.Delegator
		}
		qDelegator := qrDelegator
		if qDelegator != "" {

			if err := r.SetQueryParam("delegator", qDelegator); err != nil {
				return err
			}
		}
	}

	if o.Label != nil {

		// query param label
		var qrLabel string

		if o.Label != nil {
			qrLabel = *o.Label
		}
		qLabel := qrLabel
		if qLabel != "" {

			if err := r.SetQueryParam("label", qLabel); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Safe != nil {

		// query param safe
		var qrSafe string

		if o.Safe != nil {
			qrSafe = *o.Safe
		}
		qSafe := qrSafe
		if qSafe != "" {

			if err := r.SetQueryParam("safe", qSafe); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
