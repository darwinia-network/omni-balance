// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// V1MultisigTransactionsDeleteReader is a Reader for the V1MultisigTransactionsDelete structure.
type V1MultisigTransactionsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1MultisigTransactionsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewV1MultisigTransactionsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1MultisigTransactionsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewV1MultisigTransactionsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/multisig-transactions/{safe_tx_hash}/] v1_multisig-transactions_delete", response, response.Code())
	}
}

// NewV1MultisigTransactionsDeleteNoContent creates a V1MultisigTransactionsDeleteNoContent with default headers values
func NewV1MultisigTransactionsDeleteNoContent() *V1MultisigTransactionsDeleteNoContent {
	return &V1MultisigTransactionsDeleteNoContent{}
}

/*
V1MultisigTransactionsDeleteNoContent describes a response with status code 204, with default header values.

Deleted
*/
type V1MultisigTransactionsDeleteNoContent struct {
}

// IsSuccess returns true when this v1 multisig transactions delete no content response has a 2xx status code
func (o *V1MultisigTransactionsDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 multisig transactions delete no content response has a 3xx status code
func (o *V1MultisigTransactionsDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 multisig transactions delete no content response has a 4xx status code
func (o *V1MultisigTransactionsDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 multisig transactions delete no content response has a 5xx status code
func (o *V1MultisigTransactionsDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 multisig transactions delete no content response a status code equal to that given
func (o *V1MultisigTransactionsDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the v1 multisig transactions delete no content response
func (o *V1MultisigTransactionsDeleteNoContent) Code() int {
	return 204
}

func (o *V1MultisigTransactionsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsDeleteNoContent", 204)
}

func (o *V1MultisigTransactionsDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsDeleteNoContent", 204)
}

func (o *V1MultisigTransactionsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewV1MultisigTransactionsDeleteBadRequest creates a V1MultisigTransactionsDeleteBadRequest with default headers values
func NewV1MultisigTransactionsDeleteBadRequest() *V1MultisigTransactionsDeleteBadRequest {
	return &V1MultisigTransactionsDeleteBadRequest{}
}

/*
V1MultisigTransactionsDeleteBadRequest describes a response with status code 400, with default header values.

Error processing data
*/
type V1MultisigTransactionsDeleteBadRequest struct {
}

// IsSuccess returns true when this v1 multisig transactions delete bad request response has a 2xx status code
func (o *V1MultisigTransactionsDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 multisig transactions delete bad request response has a 3xx status code
func (o *V1MultisigTransactionsDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 multisig transactions delete bad request response has a 4xx status code
func (o *V1MultisigTransactionsDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 multisig transactions delete bad request response has a 5xx status code
func (o *V1MultisigTransactionsDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 multisig transactions delete bad request response a status code equal to that given
func (o *V1MultisigTransactionsDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 multisig transactions delete bad request response
func (o *V1MultisigTransactionsDeleteBadRequest) Code() int {
	return 400
}

func (o *V1MultisigTransactionsDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsDeleteBadRequest", 400)
}

func (o *V1MultisigTransactionsDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsDeleteBadRequest", 400)
}

func (o *V1MultisigTransactionsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewV1MultisigTransactionsDeleteNotFound creates a V1MultisigTransactionsDeleteNotFound with default headers values
func NewV1MultisigTransactionsDeleteNotFound() *V1MultisigTransactionsDeleteNotFound {
	return &V1MultisigTransactionsDeleteNotFound{}
}

/*
V1MultisigTransactionsDeleteNotFound describes a response with status code 404, with default header values.

Transaction not found
*/
type V1MultisigTransactionsDeleteNotFound struct {
}

// IsSuccess returns true when this v1 multisig transactions delete not found response has a 2xx status code
func (o *V1MultisigTransactionsDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 multisig transactions delete not found response has a 3xx status code
func (o *V1MultisigTransactionsDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 multisig transactions delete not found response has a 4xx status code
func (o *V1MultisigTransactionsDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 multisig transactions delete not found response has a 5xx status code
func (o *V1MultisigTransactionsDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 multisig transactions delete not found response a status code equal to that given
func (o *V1MultisigTransactionsDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the v1 multisig transactions delete not found response
func (o *V1MultisigTransactionsDeleteNotFound) Code() int {
	return 404
}

func (o *V1MultisigTransactionsDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsDeleteNotFound", 404)
}

func (o *V1MultisigTransactionsDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsDeleteNotFound", 404)
}

func (o *V1MultisigTransactionsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
