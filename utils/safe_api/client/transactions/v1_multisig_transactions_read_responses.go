// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "omni-balance/utils/safe_api"
)

// V1MultisigTransactionsReadReader is a Reader for the V1MultisigTransactionsRead structure.
type V1MultisigTransactionsReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1MultisigTransactionsReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1MultisigTransactionsReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /v1/multisig-transactions/{safe_tx_hash}/] v1_multisig-transactions_read", response, response.Code())
	}
}

// NewV1MultisigTransactionsReadOK creates a V1MultisigTransactionsReadOK with default headers values
func NewV1MultisigTransactionsReadOK() *V1MultisigTransactionsReadOK {
	return &V1MultisigTransactionsReadOK{}
}

/*
V1MultisigTransactionsReadOK describes a response with status code 200, with default header values.

V1MultisigTransactionsReadOK v1 multisig transactions read o k
*/
type V1MultisigTransactionsReadOK struct {
	Payload *models.SafeMultisigTransactionResponse
}

// IsSuccess returns true when this v1 multisig transactions read o k response has a 2xx status code
func (o *V1MultisigTransactionsReadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 multisig transactions read o k response has a 3xx status code
func (o *V1MultisigTransactionsReadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 multisig transactions read o k response has a 4xx status code
func (o *V1MultisigTransactionsReadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 multisig transactions read o k response has a 5xx status code
func (o *V1MultisigTransactionsReadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 multisig transactions read o k response a status code equal to that given
func (o *V1MultisigTransactionsReadOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 multisig transactions read o k response
func (o *V1MultisigTransactionsReadOK) Code() int {
	return 200
}

func (o *V1MultisigTransactionsReadOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsReadOK %s", 200, payload)
}

func (o *V1MultisigTransactionsReadOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/multisig-transactions/{safe_tx_hash}/][%d] v1MultisigTransactionsReadOK %s", 200, payload)
}

func (o *V1MultisigTransactionsReadOK) GetPayload() *models.SafeMultisigTransactionResponse {
	return o.Payload
}

func (o *V1MultisigTransactionsReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SafeMultisigTransactionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
