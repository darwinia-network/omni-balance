// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewV1SafesModuleTransactionsListParams creates a new V1SafesModuleTransactionsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewV1SafesModuleTransactionsListParams() *V1SafesModuleTransactionsListParams {
	return &V1SafesModuleTransactionsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewV1SafesModuleTransactionsListParamsWithTimeout creates a new V1SafesModuleTransactionsListParams object
// with the ability to set a timeout on a request.
func NewV1SafesModuleTransactionsListParamsWithTimeout(timeout time.Duration) *V1SafesModuleTransactionsListParams {
	return &V1SafesModuleTransactionsListParams{
		timeout: timeout,
	}
}

// NewV1SafesModuleTransactionsListParamsWithContext creates a new V1SafesModuleTransactionsListParams object
// with the ability to set a context for a request.
func NewV1SafesModuleTransactionsListParamsWithContext(ctx context.Context) *V1SafesModuleTransactionsListParams {
	return &V1SafesModuleTransactionsListParams{
		Context: ctx,
	}
}

// NewV1SafesModuleTransactionsListParamsWithHTTPClient creates a new V1SafesModuleTransactionsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewV1SafesModuleTransactionsListParamsWithHTTPClient(client *http.Client) *V1SafesModuleTransactionsListParams {
	return &V1SafesModuleTransactionsListParams{
		HTTPClient: client,
	}
}

/*
V1SafesModuleTransactionsListParams contains all the parameters to send to the API endpoint

	for the v1 safes module transactions list operation.

	Typically these are written to a http.Request.
*/
type V1SafesModuleTransactionsListParams struct {

	// Address.
	Address string

	/* BlockNumber.

	   block_number
	*/
	BlockNumber *string

	/* BlockNumberGt.

	   block_number__gt
	*/
	BlockNumberGt *string

	/* BlockNumberLt.

	   block_number__lt
	*/
	BlockNumberLt *string

	/* Failed.

	   failed
	*/
	Failed *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	/* Module.

	   module
	*/
	Module *string

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	/* Operation.

	   operation
	*/
	Operation *string

	/* Ordering.

	   Which field to use when ordering the results.
	*/
	Ordering *string

	/* Safe.

	   safe
	*/
	Safe *string

	/* To.

	   to
	*/
	To *string

	/* TransactionHash.

	   transaction_hash
	*/
	TransactionHash *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the v1 safes module transactions list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *V1SafesModuleTransactionsListParams) WithDefaults() *V1SafesModuleTransactionsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the v1 safes module transactions list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *V1SafesModuleTransactionsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithTimeout(timeout time.Duration) *V1SafesModuleTransactionsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithContext(ctx context.Context) *V1SafesModuleTransactionsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithHTTPClient(client *http.Client) *V1SafesModuleTransactionsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddress adds the address to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithAddress(address string) *V1SafesModuleTransactionsListParams {
	o.SetAddress(address)
	return o
}

// SetAddress adds the address to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetAddress(address string) {
	o.Address = address
}

// WithBlockNumber adds the blockNumber to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithBlockNumber(blockNumber *string) *V1SafesModuleTransactionsListParams {
	o.SetBlockNumber(blockNumber)
	return o
}

// SetBlockNumber adds the blockNumber to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetBlockNumber(blockNumber *string) {
	o.BlockNumber = blockNumber
}

// WithBlockNumberGt adds the blockNumberGt to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithBlockNumberGt(blockNumberGt *string) *V1SafesModuleTransactionsListParams {
	o.SetBlockNumberGt(blockNumberGt)
	return o
}

// SetBlockNumberGt adds the blockNumberGt to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetBlockNumberGt(blockNumberGt *string) {
	o.BlockNumberGt = blockNumberGt
}

// WithBlockNumberLt adds the blockNumberLt to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithBlockNumberLt(blockNumberLt *string) *V1SafesModuleTransactionsListParams {
	o.SetBlockNumberLt(blockNumberLt)
	return o
}

// SetBlockNumberLt adds the blockNumberLt to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetBlockNumberLt(blockNumberLt *string) {
	o.BlockNumberLt = blockNumberLt
}

// WithFailed adds the failed to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithFailed(failed *string) *V1SafesModuleTransactionsListParams {
	o.SetFailed(failed)
	return o
}

// SetFailed adds the failed to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetFailed(failed *string) {
	o.Failed = failed
}

// WithLimit adds the limit to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithLimit(limit *int64) *V1SafesModuleTransactionsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithModule adds the module to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithModule(module *string) *V1SafesModuleTransactionsListParams {
	o.SetModule(module)
	return o
}

// SetModule adds the module to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetModule(module *string) {
	o.Module = module
}

// WithOffset adds the offset to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithOffset(offset *int64) *V1SafesModuleTransactionsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOperation adds the operation to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithOperation(operation *string) *V1SafesModuleTransactionsListParams {
	o.SetOperation(operation)
	return o
}

// SetOperation adds the operation to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetOperation(operation *string) {
	o.Operation = operation
}

// WithOrdering adds the ordering to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithOrdering(ordering *string) *V1SafesModuleTransactionsListParams {
	o.SetOrdering(ordering)
	return o
}

// SetOrdering adds the ordering to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetOrdering(ordering *string) {
	o.Ordering = ordering
}

// WithSafe adds the safe to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithSafe(safe *string) *V1SafesModuleTransactionsListParams {
	o.SetSafe(safe)
	return o
}

// SetSafe adds the safe to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetSafe(safe *string) {
	o.Safe = safe
}

// WithTo adds the to to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithTo(to *string) *V1SafesModuleTransactionsListParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetTo(to *string) {
	o.To = to
}

// WithTransactionHash adds the transactionHash to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) WithTransactionHash(transactionHash *string) *V1SafesModuleTransactionsListParams {
	o.SetTransactionHash(transactionHash)
	return o
}

// SetTransactionHash adds the transactionHash to the v1 safes module transactions list params
func (o *V1SafesModuleTransactionsListParams) SetTransactionHash(transactionHash *string) {
	o.TransactionHash = transactionHash
}

// WriteToRequest writes these params to a swagger request
func (o *V1SafesModuleTransactionsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param address
	if err := r.SetPathParam("address", o.Address); err != nil {
		return err
	}

	if o.BlockNumber != nil {

		// query param block_number
		var qrBlockNumber string

		if o.BlockNumber != nil {
			qrBlockNumber = *o.BlockNumber
		}
		qBlockNumber := qrBlockNumber
		if qBlockNumber != "" {

			if err := r.SetQueryParam("block_number", qBlockNumber); err != nil {
				return err
			}
		}
	}

	if o.BlockNumberGt != nil {

		// query param block_number__gt
		var qrBlockNumberGt string

		if o.BlockNumberGt != nil {
			qrBlockNumberGt = *o.BlockNumberGt
		}
		qBlockNumberGt := qrBlockNumberGt
		if qBlockNumberGt != "" {

			if err := r.SetQueryParam("block_number__gt", qBlockNumberGt); err != nil {
				return err
			}
		}
	}

	if o.BlockNumberLt != nil {

		// query param block_number__lt
		var qrBlockNumberLt string

		if o.BlockNumberLt != nil {
			qrBlockNumberLt = *o.BlockNumberLt
		}
		qBlockNumberLt := qrBlockNumberLt
		if qBlockNumberLt != "" {

			if err := r.SetQueryParam("block_number__lt", qBlockNumberLt); err != nil {
				return err
			}
		}
	}

	if o.Failed != nil {

		// query param failed
		var qrFailed string

		if o.Failed != nil {
			qrFailed = *o.Failed
		}
		qFailed := qrFailed
		if qFailed != "" {

			if err := r.SetQueryParam("failed", qFailed); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Module != nil {

		// query param module
		var qrModule string

		if o.Module != nil {
			qrModule = *o.Module
		}
		qModule := qrModule
		if qModule != "" {

			if err := r.SetQueryParam("module", qModule); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Operation != nil {

		// query param operation
		var qrOperation string

		if o.Operation != nil {
			qrOperation = *o.Operation
		}
		qOperation := qrOperation
		if qOperation != "" {

			if err := r.SetQueryParam("operation", qOperation); err != nil {
				return err
			}
		}
	}

	if o.Ordering != nil {

		// query param ordering
		var qrOrdering string

		if o.Ordering != nil {
			qrOrdering = *o.Ordering
		}
		qOrdering := qrOrdering
		if qOrdering != "" {

			if err := r.SetQueryParam("ordering", qOrdering); err != nil {
				return err
			}
		}
	}

	if o.Safe != nil {

		// query param safe
		var qrSafe string

		if o.Safe != nil {
			qrSafe = *o.Safe
		}
		qSafe := qrSafe
		if qSafe != "" {

			if err := r.SetQueryParam("safe", qSafe); err != nil {
				return err
			}
		}
	}

	if o.To != nil {

		// query param to
		var qrTo string

		if o.To != nil {
			qrTo = *o.To
		}
		qTo := qrTo
		if qTo != "" {

			if err := r.SetQueryParam("to", qTo); err != nil {
				return err
			}
		}
	}

	if o.TransactionHash != nil {

		// query param transaction_hash
		var qrTransactionHash string

		if o.TransactionHash != nil {
			qrTransactionHash = *o.TransactionHash
		}
		qTransactionHash := qrTransactionHash
		if qTransactionHash != "" {

			if err := r.SetQueryParam("transaction_hash", qTransactionHash); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
