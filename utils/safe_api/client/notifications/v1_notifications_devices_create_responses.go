// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	models "omni-balance/utils/safe_api"
)

// V1NotificationsDevicesCreateReader is a Reader for the V1NotificationsDevicesCreate structure.
type V1NotificationsDevicesCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V1NotificationsDevicesCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewV1NotificationsDevicesCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewV1NotificationsDevicesCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/notifications/devices/] v1_notifications_devices_create", response, response.Code())
	}
}

// NewV1NotificationsDevicesCreateOK creates a V1NotificationsDevicesCreateOK with default headers values
func NewV1NotificationsDevicesCreateOK() *V1NotificationsDevicesCreateOK {
	return &V1NotificationsDevicesCreateOK{}
}

/*
V1NotificationsDevicesCreateOK describes a response with status code 200, with default header values.

V1NotificationsDevicesCreateOK v1 notifications devices create o k
*/
type V1NotificationsDevicesCreateOK struct {
	Payload *models.FirebaseDeviceSerializerWithOwnersResponse
}

// IsSuccess returns true when this v1 notifications devices create o k response has a 2xx status code
func (o *V1NotificationsDevicesCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this v1 notifications devices create o k response has a 3xx status code
func (o *V1NotificationsDevicesCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 notifications devices create o k response has a 4xx status code
func (o *V1NotificationsDevicesCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this v1 notifications devices create o k response has a 5xx status code
func (o *V1NotificationsDevicesCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 notifications devices create o k response a status code equal to that given
func (o *V1NotificationsDevicesCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the v1 notifications devices create o k response
func (o *V1NotificationsDevicesCreateOK) Code() int {
	return 200
}

func (o *V1NotificationsDevicesCreateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/notifications/devices/][%d] v1NotificationsDevicesCreateOK %s", 200, payload)
}

func (o *V1NotificationsDevicesCreateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/notifications/devices/][%d] v1NotificationsDevicesCreateOK %s", 200, payload)
}

func (o *V1NotificationsDevicesCreateOK) GetPayload() *models.FirebaseDeviceSerializerWithOwnersResponse {
	return o.Payload
}

func (o *V1NotificationsDevicesCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FirebaseDeviceSerializerWithOwnersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV1NotificationsDevicesCreateBadRequest creates a V1NotificationsDevicesCreateBadRequest with default headers values
func NewV1NotificationsDevicesCreateBadRequest() *V1NotificationsDevicesCreateBadRequest {
	return &V1NotificationsDevicesCreateBadRequest{}
}

/*
V1NotificationsDevicesCreateBadRequest describes a response with status code 400, with default header values.

Invalid data
*/
type V1NotificationsDevicesCreateBadRequest struct {
}

// IsSuccess returns true when this v1 notifications devices create bad request response has a 2xx status code
func (o *V1NotificationsDevicesCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this v1 notifications devices create bad request response has a 3xx status code
func (o *V1NotificationsDevicesCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this v1 notifications devices create bad request response has a 4xx status code
func (o *V1NotificationsDevicesCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this v1 notifications devices create bad request response has a 5xx status code
func (o *V1NotificationsDevicesCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this v1 notifications devices create bad request response a status code equal to that given
func (o *V1NotificationsDevicesCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the v1 notifications devices create bad request response
func (o *V1NotificationsDevicesCreateBadRequest) Code() int {
	return 400
}

func (o *V1NotificationsDevicesCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/notifications/devices/][%d] v1NotificationsDevicesCreateBadRequest", 400)
}

func (o *V1NotificationsDevicesCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/notifications/devices/][%d] v1NotificationsDevicesCreateBadRequest", 400)
}

func (o *V1NotificationsDevicesCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
